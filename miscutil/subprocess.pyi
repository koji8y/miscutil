import subprocess
from enum import Enum
from miscutil.yamljson import to_yaml_str as to_yaml_str
from typing import Any, Dict, List, Optional

class Duration:
    class _Status(Enum):
        NotStarted: str = ...
        Started: str = ...
        Finished: str = ...
    status: Any = ...
    time_start: Any = ...
    time_end: Any = ...
    def __init__(self) -> None: ...
    def __enter__(self) -> Duration: ...
    def __exit__(self, status: Any, ex_str: Any, traceback_info: Any) -> None: ...
    @property
    def in_seconds(self) -> float: ...

class CommandResult:
    __slot__: Any = ...
    normal_end: Any = ...
    returncode: Any = ...
    stdout: Any = ...
    stderr: Any = ...
    def __init__(self, result: subprocess.CompletedProcess) -> None: ...
    def to_dict(self) -> Dict[str, Any]: ...

def run_command(cmd_args: List[str], show_process: bool=..., cwd: Optional[str]=...) -> CommandResult: ...
